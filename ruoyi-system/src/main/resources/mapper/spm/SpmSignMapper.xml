<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.spm.mapper.SpmSignMapper">
    
    <resultMap type="SpmSign" id="SpmSignResult">
        <result property="id"    column="id"    />
        <result property="courseId"    column="course_id"    />
        <result property="beginTime"    column="begin_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSpmSignVo">
        select id, course_id, begin_time, end_time, del_flag, create_by, create_time, update_by, update_time from spm_sign
    </sql>

    <select id="selectSpmSignList" parameterType="SpmSign" resultMap="SpmSignResult">
        <include refid="selectSpmSignVo"/>
        <where>  
            <if test="courseId != null  and courseId != ''"> and course_id = #{courseId}</if>
            <if test="beginTime != null "> and begin_time = #{beginTime}</if>
            <if test="endTime != null "> and end_time = #{endTime}</if>
        </where>
    </select>
    
    <select id="selectSpmSignById" parameterType="String" resultMap="SpmSignResult">
        <include refid="selectSpmSignVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSpmSign" parameterType="SpmSign">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select uuid() as id from dual
        </selectKey>
        insert into spm_sign
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="courseId != null and courseId != ''">course_id,</if>
            <if test="beginTime != null">begin_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="courseId != null and courseId != ''">#{courseId},</if>
            <if test="beginTime != null">#{beginTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSpmSign" parameterType="SpmSign">
        update spm_sign
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseId != null and courseId != ''">course_id = #{courseId},</if>
            <if test="beginTime != null">begin_time = #{beginTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSpmSignById" parameterType="String">
        delete from spm_sign where id = #{id}
    </delete>

    <delete id="deleteSpmSignByIds" parameterType="String">
        delete from spm_sign where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>